/* SPDX-License-Identifier: GPL-2.0-only */
/*
 * Copyright (c) 2002,2007-2021, The Linux Foundation. All rights reserved.
 * Copyright (c) 2022-2023, Qualcomm Innovation Center, Inc. All rights reserved.
 */

#define ANY_ID (~0)

#define DEFINE_ADRENO_REV(_rev, _core, _major, _minor, _patchid) \
	.gpurev = _rev, .core = _core, .major = _major, .minor = _minor, \
	.patchid = _patchid

#define DEFINE_DEPRECATED_CORE(_name, _rev, _core, _major, _minor, _patchid) \
static const struct adreno_gpu_core adreno_gpu_core_##_name = { \
	DEFINE_ADRENO_REV(_rev, _core, _major, _minor, _patchid), \
	.features = ADRENO_DEPRECATED, \
}

static const struct kgsl_regmap_list a306_vbif_regs[] = {
	{ A3XX_VBIF_ROUND_ROBIN_QOS_ARB, 0x0003 },
	{ A3XX_VBIF_OUT_RD_LIM_CONF0, 0x0000000A },
	{ A3XX_VBIF_OUT_WR_LIM_CONF0, 0x0000000A },
};

extern const struct gen7_snapshot_block_list gen7_0_0_snapshot_block_list;
extern const struct gen7_snapshot_block_list gen7_3_0_snapshot_block_list;

static const struct kgsl_regmap_list gen7_0_0_gbif_regs[] = {
	{ GEN7_GBIF_QSB_SIDE0, 0x00071620 },
	{ GEN7_GBIF_QSB_SIDE1, 0x00071620 },
	{ GEN7_GBIF_QSB_SIDE2, 0x00071620 },
	{ GEN7_GBIF_QSB_SIDE3, 0x00071620 },
	{ GEN7_RBBM_GBIF_CLIENT_QOS_CNTL, 0x2120212 },
};

static const struct kgsl_regmap_list gen7_3_0_gbif_regs[] = {
	{ GEN7_GBIF_QSB_SIDE0, 0x00071620 },
	{ GEN7_GBIF_QSB_SIDE1, 0x00071620 },
	{ GEN7_GBIF_QSB_SIDE2, 0x00071620 },
	{ GEN7_GBIF_QSB_SIDE3, 0x00071620 },
	{ GEN7_RBBM_GBIF_CLIENT_QOS_CNTL, 0x00000003 },
};

static const u32 gen7_6_0_gbif_client_qos_values[KGSL_PRIORITY_MAX_RB_LEVELS] = {
	0x03230323,
};

static const struct kgsl_regmap_list gen7_0_0_hwcg_regs[] = {
	{ GEN7_RBBM_CLOCK_CNTL_SP0, 0x02222222 },
	{ GEN7_RBBM_CLOCK_CNTL2_SP0, 0x02022222 },
	{ GEN7_RBBM_CLOCK_HYST_SP0, 0x0000f3cf },
	{ GEN7_RBBM_CLOCK_DELAY_SP0, 0x00000080 },
	{ GEN7_RBBM_CLOCK_CNTL_TP0, 0x22222220 },
	{ GEN7_RBBM_CLOCK_CNTL2_TP0, 0x22222222 },
	{ GEN7_RBBM_CLOCK_CNTL3_TP0, 0x22222222 },
	{ GEN7_RBBM_CLOCK_CNTL4_TP0, 0x00222222 },
	{ GEN7_RBBM_CLOCK_HYST_TP0, 0x77777777 },
	{ GEN7_RBBM_CLOCK_HYST2_TP0, 0x77777777 },
	{ GEN7_RBBM_CLOCK_HYST3_TP0, 0x77777777 },
	{ GEN7_RBBM_CLOCK_HYST4_TP0, 0x00077777 },
	{ GEN7_RBBM_CLOCK_DELAY_TP0, 0x11111111 },
	{ GEN7_RBBM_CLOCK_DELAY2_TP0, 0x11111111 },
	{ GEN7_RBBM_CLOCK_DELAY3_TP0, 0x11111111 },
	{ GEN7_RBBM_CLOCK_DELAY4_TP0, 0x00011111 },
	{ GEN7_RBBM_CLOCK_CNTL_UCHE, 0x22222222 },
	{ GEN7_RBBM_CLOCK_HYST_UCHE, 0x00000004 },
	{ GEN7_RBBM_CLOCK_DELAY_UCHE, 0x00000002 },
	{ GEN7_RBBM_CLOCK_CNTL_RB0, 0x22222222 },
	{ GEN7_RBBM_CLOCK_CNTL2_RB0, 0x01002222 },
	{ GEN7_RBBM_CLOCK_CNTL_CCU0, 0x00002220 },
	{ GEN7_RBBM_CLOCK_HYST_RB_CCU0, 0x44000f00 },
	{ GEN7_RBBM_CLOCK_CNTL_RAC, 0x25222022 },
	{ GEN7_RBBM_CLOCK_CNTL2_RAC, 0x00555555 },
	{ GEN7_RBBM_CLOCK_DELAY_RAC, 0x00000011 },
	{ GEN7_RBBM_CLOCK_HYST_RAC, 0x00440044 },
	{ GEN7_RBBM_CLOCK_CNTL_TSE_RAS_RBBM, 0x04222222 },
	{ GEN7_RBBM_CLOCK_MODE2_GRAS, 0x00000222 },
	{ GEN7_RBBM_CLOCK_MODE_BV_GRAS, 0x00222222 },
	{ GEN7_RBBM_CLOCK_MODE_GPC, 0x02222223 },
	{ GEN7_RBBM_CLOCK_MODE_VFD, 0x00002222 },
	{ GEN7_RBBM_CLOCK_MODE_BV_GPC, 0x00222222 },
	{ GEN7_RBBM_CLOCK_MODE_BV_VFD, 0x00002222 },
	{ GEN7_RBBM_CLOCK_HYST_TSE_RAS_RBBM, 0x00000000 },
	{ GEN7_RBBM_CLOCK_HYST_GPC, 0x04104004 },
	{ GEN7_RBBM_CLOCK_HYST_VFD, 0x00000000 },
	{ GEN7_RBBM_CLOCK_DELAY_TSE_RAS_RBBM, 0x00004000 },
	{ GEN7_RBBM_CLOCK_DELAY_GPC, 0x00000200 },
	{ GEN7_RBBM_CLOCK_DELAY_VFD, 0x00002222 },
	{ GEN7_RBBM_CLOCK_MODE_HLSQ, 0x00002222 },
	{ GEN7_RBBM_CLOCK_DELAY_HLSQ, 0x00000000 },
	{ GEN7_RBBM_CLOCK_HYST_HLSQ, 0x00000000 },
	{ GEN7_RBBM_CLOCK_DELAY_HLSQ_2, 0x00000002 },
	{ GEN7_RBBM_CLOCK_MODE_BV_LRZ, 0x55555552 },
	{ GEN7_RBBM_CLOCK_MODE_CP, 0x00000223 },
	{ GEN7_RBBM_CLOCK_CNTL, 0x8aa8aa82 },
	{ GEN7_RBBM_ISDB_CNT, 0x00000182 },
	{ GEN7_RBBM_RAC_THRESHOLD_CNT, 0x00000000 },
	{ GEN7_RBBM_SP_HYST_CNT, 0x00000000 },
	{ GEN7_RBBM_CLOCK_CNTL_GMU_GX, 0x00000222 },
	{ GEN7_RBBM_CLOCK_DELAY_GMU_GX, 0x00000111 },
	{ GEN7_RBBM_CLOCK_HYST_GMU_GX, 0x00000555 },
};

static const struct kgsl_regmap_list gen7_3_0_hwcg_regs[] = {
	{ GEN7_RBBM_CLOCK_CNTL_SP0, 0x02222222 },
	{ GEN7_RBBM_CLOCK_CNTL2_SP0, 0x02022222 },
	{ GEN7_RBBM_CLOCK_HYST_SP0, 0x0000f3cf },
	{ GEN7_RBBM_CLOCK_DELAY_SP0, 0x00000080 },
	{ GEN7_RBBM_CLOCK_CNTL_TP0, 0x22222220 },
	{ GEN7_RBBM_CLOCK_CNTL2_TP0, 0x22222222 },
	{ GEN7_RBBM_CLOCK_CNTL3_TP0, 0x22222222 },
	{ GEN7_RBBM_CLOCK_CNTL4_TP0, 0x00222222 },
	{ GEN7_RBBM_CLOCK_HYST_TP0, 0x77777777 },
	{ GEN7_RBBM_CLOCK_HYST2_TP0, 0x77777777 },
	{ GEN7_RBBM_CLOCK_HYST3_TP0, 0x77777777 },
	{ GEN7_RBBM_CLOCK_HYST4_TP0, 0x00077777 },
	{ GEN7_RBBM_CLOCK_DELAY_TP0, 0x11111111 },
	{ GEN7_RBBM_CLOCK_DELAY2_TP0, 0x11111111 },
	{ GEN7_RBBM_CLOCK_DELAY3_TP0, 0x11111111 },
	{ GEN7_RBBM_CLOCK_DELAY4_TP0, 0x00011111 },
	{ GEN7_RBBM_CLOCK_CNTL_UCHE, 0x22222222 },
	{ GEN7_RBBM_CLOCK_HYST_UCHE, 0x00000004 },
	{ GEN7_RBBM_CLOCK_DELAY_UCHE, 0x00000002 },
	{ GEN7_RBBM_CLOCK_CNTL_RB0, 0x22222222 },
	{ GEN7_RBBM_CLOCK_CNTL2_RB0, 0x01002222 },
	{ GEN7_RBBM_CLOCK_CNTL_CCU0, 0x00002220 },
	{ GEN7_RBBM_CLOCK_HYST_RB_CCU0, 0x44000f00 },
	{ GEN7_RBBM_CLOCK_CNTL_RAC, 0x25222022 },
	{ GEN7_RBBM_CLOCK_CNTL2_RAC, 0x00555555 },
	{ GEN7_RBBM_CLOCK_DELAY_RAC, 0x00000011 },
	{ GEN7_RBBM_CLOCK_HYST_RAC, 0x00440044 },
	{ GEN7_RBBM_CLOCK_CNTL_TSE_RAS_RBBM, 0x04222222 },
	{ GEN7_RBBM_CLOCK_MODE2_GRAS, 0x00000222 },
	{ GEN7_RBBM_CLOCK_MODE_GPC, 0x02222223 },
	{ GEN7_RBBM_CLOCK_MODE_VFD, 0x00002222 },
	{ GEN7_RBBM_CLOCK_HYST_TSE_RAS_RBBM, 0x00000000 },
	{ GEN7_RBBM_CLOCK_HYST_GPC, 0x04104004 },
	{ GEN7_RBBM_CLOCK_HYST_VFD, 0x00000000 },
	{ GEN7_RBBM_CLOCK_DELAY_TSE_RAS_RBBM, 0x00004000 },
	{ GEN7_RBBM_CLOCK_DELAY_GPC, 0x00000200 },
	{ GEN7_RBBM_CLOCK_DELAY_VFD, 0x00002222 },
	{ GEN7_RBBM_CLOCK_MODE_HLSQ, 0x00002222 },
	{ GEN7_RBBM_CLOCK_DELAY_HLSQ, 0x00000000 },
	{ GEN7_RBBM_CLOCK_HYST_HLSQ, 0x00000000 },
	{ GEN7_RBBM_CLOCK_DELAY_HLSQ_2, 0x00000002 },
	{ GEN7_RBBM_CLOCK_MODE_CP, 0x00000223 },
	{ GEN7_RBBM_CLOCK_CNTL, 0x8aa8aa82 },
	{ GEN7_RBBM_ISDB_CNT, 0x00000182 },
	{ GEN7_RBBM_RAC_THRESHOLD_CNT, 0x00000000 },
	{ GEN7_RBBM_SP_HYST_CNT, 0x00000000 },
	{ GEN7_RBBM_CLOCK_CNTL_GMU_GX, 0x00000222 },
	{ GEN7_RBBM_CLOCK_DELAY_GMU_GX, 0x00000111 },
	{ GEN7_RBBM_CLOCK_HYST_GMU_GX, 0x00000555 },
};

extern const struct gen7_snapshot_block_list gen7_6_0_snapshot_block_list;

static const struct kgsl_regmap_list gen7_6_0_hwcg_regs[] = {
	{ GEN7_RBBM_CLOCK_CNTL_SP0, 0x02222222 },
	{ GEN7_RBBM_CLOCK_CNTL2_SP0, 0x22022222 },
	{ GEN7_RBBM_CLOCK_HYST_SP0, 0x003cf3cf },
	{ GEN7_RBBM_CLOCK_DELAY_SP0, 0x00000080 },
	{ GEN7_RBBM_CLOCK_CNTL_TP0, 0x22222220 },
	{ GEN7_RBBM_CLOCK_CNTL2_TP0, 0x22222222 },
	{ GEN7_RBBM_CLOCK_CNTL3_TP0, 0x22222222 },
	{ GEN7_RBBM_CLOCK_CNTL4_TP0, 0x00222222 },
	{ GEN7_RBBM_CLOCK_HYST_TP0, 0x77777777 },
	{ GEN7_RBBM_CLOCK_HYST2_TP0, 0x77777777 },
	{ GEN7_RBBM_CLOCK_HYST3_TP0, 0x77777777 },
	{ GEN7_RBBM_CLOCK_HYST4_TP0, 0x00077777 },
	{ GEN7_RBBM_CLOCK_DELAY_TP0, 0x11111111 },
	{ GEN7_RBBM_CLOCK_DELAY2_TP0, 0x11111111 },
	{ GEN7_RBBM_CLOCK_DELAY3_TP0, 0x11111111 },
	{ GEN7_RBBM_CLOCK_DELAY4_TP0, 0x00011111 },
	{ GEN7_RBBM_CLOCK_CNTL_UCHE, 0x22222222 },
	{ GEN7_RBBM_CLOCK_CNTL2_UCHE, 0x00222222 },
	{ GEN7_RBBM_CLOCK_HYST_UCHE, 0x00000444 },
	{ GEN7_RBBM_CLOCK_DELAY_UCHE, 0x00000222 },
	{ GEN7_RBBM_CLOCK_CNTL_RB0, 0x22222222 },
	{ GEN7_RBBM_CLOCK_CNTL2_RB0, 0x01002222 },
	{ GEN7_RBBM_CLOCK_CNTL_CCU0, 0x00002220 },
	{ GEN7_RBBM_CLOCK_HYST_RB_CCU0, 0x44000f00 },
	{ GEN7_RBBM_CLOCK_CNTL_RAC, 0x25222022 },
	{ GEN7_RBBM_CLOCK_CNTL2_RAC, 0x00555555 },
	{ GEN7_RBBM_CLOCK_DELAY_RAC, 0x00000011 },
	{ GEN7_RBBM_CLOCK_HYST_RAC, 0x00440044 },
	{ GEN7_RBBM_CLOCK_CNTL_TSE_RAS_RBBM, 0x04222222 },
	{ GEN7_RBBM_CLOCK_MODE2_GRAS, 0x00000222 },
	{ GEN7_RBBM_CLOCK_MODE_BV_GRAS, 0x00222222 },
	{ GEN7_RBBM_CLOCK_MODE_GPC, 0x02222223 },
	{ GEN7_RBBM_CLOCK_MODE_VFD, 0x00222222 },
	{ GEN7_RBBM_CLOCK_MODE_BV_GPC, 0x00222222 },
	{ GEN7_RBBM_CLOCK_MODE_BV_VFD, 0x00002222 },
	{ GEN7_RBBM_CLOCK_HYST_TSE_RAS_RBBM, 0x00000000 },
	{ GEN7_RBBM_CLOCK_HYST_GPC, 0x04104004 },
	{ GEN7_RBBM_CLOCK_HYST_VFD, 0x00000000 },
	{ GEN7_RBBM_CLOCK_DELAY_TSE_RAS_RBBM, 0x00000000 },
	{ GEN7_RBBM_CLOCK_DELAY_GPC, 0x00000200 },
	{ GEN7_RBBM_CLOCK_DELAY_VFD, 0x00000000 },
	{ GEN7_RBBM_CLOCK_MODE_HLSQ, 0x00002222 },
	{ GEN7_RBBM_CLOCK_DELAY_HLSQ, 0x00000000 },
	{ GEN7_RBBM_CLOCK_HYST_HLSQ, 0x00000000 },
	{ GEN7_RBBM_CLOCK_MODE_BV_LRZ, 0x55555552 },
	{ GEN7_RBBM_CLOCK_HYST2_VFD, 0x00000000 },
	{ GEN7_RBBM_CLOCK_MODE_CP, 0x00000222 },
	{ GEN7_RBBM_CLOCK_CNTL, 0x8aa8aa82 },
	{ GEN7_RBBM_ISDB_CNT, 0x00000182 },
	{ GEN7_RBBM_RAC_THRESHOLD_CNT, 0x00000000 },
	{ GEN7_RBBM_SP_HYST_CNT, 0x00000000 },
	{ GEN7_RBBM_CLOCK_CNTL_GMU_GX, 0x00000222 },
	{ GEN7_RBBM_CLOCK_DELAY_GMU_GX, 0x00000111 },
	{ GEN7_RBBM_CLOCK_HYST_GMU_GX, 0x00000555 },
};

/* GEN7_0_0 protected register list */
static const struct gen7_protected_regs gen7_0_0_protected_regs[] = {
	{ GEN7_CP_PROTECT_REG + 0, 0x00000, 0x004ff, 0 },
	{ GEN7_CP_PROTECT_REG + 1, 0x0050b, 0x00563, 0 },
	{ GEN7_CP_PROTECT_REG + 2, 0x0050e, 0x0050e, 1 },
	{ GEN7_CP_PROTECT_REG + 3, 0x00510, 0x00510, 1 },
	{ GEN7_CP_PROTECT_REG + 4, 0x00534, 0x00534, 1 },
	{ GEN7_CP_PROTECT_REG + 5, 0x005fb, 0x00698, 0 },
	{ GEN7_CP_PROTECT_REG + 6, 0x00699, 0x00882, 1 },
	{ GEN7_CP_PROTECT_REG + 7, 0x008a0, 0x008a8, 1 },
	{ GEN7_CP_PROTECT_REG + 8, 0x008ab, 0x008cf, 1 },
	{ GEN7_CP_PROTECT_REG + 9, 0x008d0, 0x00a40, 0 },
	{ GEN7_CP_PROTECT_REG + 10, 0x00900, 0x0094d, 1 },
	{ GEN7_CP_PROTECT_REG + 11, 0x0098d, 0x00a3f, 1 },
	{ GEN7_CP_PROTECT_REG + 12, 0x00a41, 0x00bff, 1 },
	{ GEN7_CP_PROTECT_REG + 13, 0x00df0, 0x00df1, 1 },
	{ GEN7_CP_PROTECT_REG + 14, 0x00e01, 0x00e01, 1 },
	{ GEN7_CP_PROTECT_REG + 15, 0x00e07, 0x00e0f, 1 },
	{ GEN7_CP_PROTECT_REG + 16, 0x03c00, 0x03cc3, 1 },
	{ GEN7_CP_PROTECT_REG + 17, 0x03cc4, 0x05cc3, 0 },
	{ GEN7_CP_PROTECT_REG + 18, 0x08630, 0x087ff, 1 },
	{ GEN7_CP_PROTECT_REG + 19, 0x08e00, 0x08e00, 1 },
	{ GEN7_CP_PROTECT_REG + 20, 0x08e08, 0x08e08, 1 },
	{ GEN7_CP_PROTECT_REG + 21, 0x08e50, 0x08e6f, 1 },
	{ GEN7_CP_PROTECT_REG + 22, 0x08e80, 0x09100, 1 },
	{ GEN7_CP_PROTECT_REG + 23, 0x09624, 0x097ff, 1 },
	{ GEN7_CP_PROTECT_REG + 24, 0x09e40, 0x09e40, 1 },
	{ GEN7_CP_PROTECT_REG + 25, 0x09e64, 0x09e71, 1 },
	{ GEN7_CP_PROTECT_REG + 26, 0x09e78, 0x09fff, 1 },
	{ GEN7_CP_PROTECT_REG + 27, 0x0a630, 0x0a7ff, 1 },
	{ GEN7_CP_PROTECT_REG + 28, 0x0ae02, 0x0ae02, 1 },
	{ GEN7_CP_PROTECT_REG + 29, 0x0ae50, 0x0ae5f, 1 },
	{ GEN7_CP_PROTECT_REG + 30, 0x0ae66, 0x0ae69, 1 },
	{ GEN7_CP_PROTECT_REG + 31, 0x0ae6f, 0x0ae72, 1 },
	{ GEN7_CP_PROTECT_REG + 32, 0x0b604, 0x0b607, 1 },
	{ GEN7_CP_PROTECT_REG + 33, 0x0ec00, 0x0fbff, 1 },
	{ GEN7_CP_PROTECT_REG + 34, 0x0fc00, 0x11bff, 0 },
	{ GEN7_CP_PROTECT_REG + 35, 0x18400, 0x18453, 1 },
	{ GEN7_CP_PROTECT_REG + 36, 0x18454, 0x18458, 0 },
	{ GEN7_CP_PROTECT_REG + 37, 0x18459, 0x1a458, 1 },
	{ GEN7_CP_PROTECT_REG + 38, 0x1a459, 0x1c458, 1 },
	{ GEN7_CP_PROTECT_REG + 39, 0x1c459, 0x1e458, 1 },
	{ GEN7_CP_PROTECT_REG + 40, 0x1f400, 0x1f843, 1 },
	{ GEN7_CP_PROTECT_REG + 41, 0x1f844, 0x1f8bf, 0 },
	{ GEN7_CP_PROTECT_REG + 42, 0x1f860, 0x1f860, 1 },
	{ GEN7_CP_PROTECT_REG + 43, 0x1f878, 0x1f8a2, 1 },
	{ GEN7_CP_PROTECT_REG + 47, 0x1f8c0, 0x1f8c0, 1 },
	{ 0 },
};

static const struct adreno_gen7_core adreno_gpu_core_gen7_0_0 = {
	.base = {
		DEFINE_ADRENO_REV(ADRENO_REV_GEN7_0_0,
				UINT_MAX, UINT_MAX, UINT_MAX, 0),
		.compatible = "qcom,adreno-gpu-gen7-0-0",
		.chipid = 0x07030000,
		.features = ADRENO_APRIV | ADRENO_IOCOHERENT |
				ADRENO_CONTENT_PROTECTION | ADRENO_IFPC |
				ADRENO_ACD | ADRENO_L3_VOTE | ADRENO_BCL |
				ADRENO_PREEMPTION,
		.gpudev = &adreno_gen7_gmu_gpudev.base,
		.perfcounters = &adreno_gen7_perfcounters,
		.uche_gmem_alignment = 0,
		.gmem_size = SZ_2M,
		.bus_width = 32,
		.snapshot_size = SZ_4M,
	},
	.gmu_fw_version = GMU_VERSION(4, 0, 0),
	.sqefw_name = "a730_sqe.fw",
	.gmufw_name = "gmu_gen70000.bin",
	.gmufw_bak_name = "c500_gmu.bin",
	.zap_name = "a730_zap",
	.hwcg = gen7_0_0_hwcg_regs,
	.hwcg_count = ARRAY_SIZE(gen7_0_0_hwcg_regs),
	.gbif = gen7_0_0_gbif_regs,
	.gbif_count = ARRAY_SIZE(gen7_0_0_gbif_regs),
	.hang_detect_cycles = 0xcfffff,
	.protected_regs = gen7_0_0_protected_regs,
	.highest_bank_bit = 16,
	.gen7_snapshot_block_list = &gen7_0_0_snapshot_block_list,
	.fast_bus_hint = true,
};

static const struct adreno_gen7_core adreno_gpu_core_gen7_0_1 = {
	.base = {
		DEFINE_ADRENO_REV(ADRENO_REV_GEN7_0_1,
				UINT_MAX, UINT_MAX, UINT_MAX, ANY_ID),
		.compatible = "qcom,adreno-gpu-gen7-0-1",
		.chipid = 0x07030001,
		.features = ADRENO_APRIV | ADRENO_IOCOHERENT |
				ADRENO_CONTENT_PROTECTION | ADRENO_IFPC |
				ADRENO_ACD | ADRENO_L3_VOTE | ADRENO_BCL |
				ADRENO_PREEMPTION,
		.gpudev = &adreno_gen7_gmu_gpudev.base,
		.perfcounters = &adreno_gen7_perfcounters,
		.uche_gmem_alignment = 0,
		.gmem_size = SZ_2M,
		.bus_width = 32,
		.snapshot_size = SZ_4M,
	},
	.gmu_fw_version = GMU_VERSION(4, 0, 0),
	.sqefw_name = "a730_sqe.fw",
	.gmufw_name = "gmu_gen70000.bin",
	.gmufw_bak_name = "c500_gmu.bin",
	.zap_name = "a730_zap",
	.hwcg = gen7_0_0_hwcg_regs,
	.hwcg_count = ARRAY_SIZE(gen7_0_0_hwcg_regs),
	.gbif = gen7_0_0_gbif_regs,
	.gbif_count = ARRAY_SIZE(gen7_0_0_gbif_regs),
	.hang_detect_cycles = 0xcfffff,
	.protected_regs = gen7_0_0_protected_regs,
	.highest_bank_bit = 16,
	.gen7_snapshot_block_list = &gen7_0_0_snapshot_block_list,
	.fast_bus_hint = true,
};

static const struct adreno_gen7_core adreno_gpu_core_gen7_4_0 = {
	.base = {
		DEFINE_ADRENO_REV(ADRENO_REV_GEN7_4_0,
				UINT_MAX, UINT_MAX, UINT_MAX, ANY_ID),
		.compatible = "qcom,adreno-gpu-gen7-4-0",
		.features = ADRENO_APRIV | ADRENO_IOCOHERENT |
				ADRENO_CONTENT_PROTECTION | ADRENO_L3_VOTE |
				ADRENO_PREEMPTION | ADRENO_IFPC | ADRENO_ACD |
				ADRENO_BCL,
		.gpudev = &adreno_gen7_gmu_gpudev.base,
		.perfcounters = &adreno_gen7_perfcounters,
		.uche_gmem_alignment = 0,
		.gmem_size = SZ_2M,
		.bus_width = 32,
		.snapshot_size = SZ_4M,
	},
	.gmu_fw_version = GMU_VERSION(4, 0, 7),
	.sqefw_name = "a730_sqe.fw",
	.gmufw_name = "gmu_gen70000.bin",
	.gmufw_bak_name = "c500_gmu.bin",
	.zap_name = "a730_zap",
	.hwcg = gen7_0_0_hwcg_regs,
	.hwcg_count = ARRAY_SIZE(gen7_0_0_hwcg_regs),
	.gbif = gen7_0_0_gbif_regs,
	.gbif_count = ARRAY_SIZE(gen7_0_0_gbif_regs),
	.hang_detect_cycles = 0xcfffff,
	.protected_regs = gen7_0_0_protected_regs,
	.highest_bank_bit = 16,
	.gen7_snapshot_block_list = &gen7_0_0_snapshot_block_list,
	.fast_bus_hint = true,
};

static const struct adreno_gen7_core adreno_gpu_core_gen7_3_0 = {
	.base = {
		DEFINE_ADRENO_REV(ADRENO_REV_GEN7_3_0,
				UINT_MAX, UINT_MAX, UINT_MAX, 0),
		.compatible = "qcom,adreno-gpu-gen7-3-0",
		.chipid = 0x07010000,
		.features = ADRENO_APRIV | ADRENO_IOCOHERENT |
				ADRENO_CONTENT_PROTECTION | ADRENO_IFPC |
				ADRENO_PREEMPTION | ADRENO_BCL | ADRENO_ACD,
		.gpudev = &adreno_gen7_gmu_gpudev.base,
		.perfcounters = &adreno_gen7_perfcounters,
		.uche_gmem_alignment = 0,
		.gmem_size = SZ_512K,
		.bus_width = 32,
		.snapshot_size = SZ_2M,
	},
	.gmu_fw_version = GMU_VERSION(4, 0, 0),
	.sqefw_name = "a710_sqe.fw",
	.gmufw_name = "gmu_gen70000.bin",
	.zap_name = "a710_zap",
	.hwcg = gen7_3_0_hwcg_regs,
	.hwcg_count = ARRAY_SIZE(gen7_3_0_hwcg_regs),
	.gbif = gen7_3_0_gbif_regs,
	.gbif_count = ARRAY_SIZE(gen7_3_0_gbif_regs),
	.hang_detect_cycles = 0xcfffff,
	.protected_regs = gen7_0_0_protected_regs,
	.highest_bank_bit = 15,
	.gen7_snapshot_block_list = &gen7_3_0_snapshot_block_list,
};

static const struct adreno_gen7_core adreno_gpu_core_gen7_6_0 = {
	.base = {
		DEFINE_ADRENO_REV(ADRENO_REV_GEN7_6_0,
				UINT_MAX, UINT_MAX, UINT_MAX, ANY_ID),
		.compatible = "qcom,adreno-gpu-gen7-6-0",
		.features = ADRENO_APRIV | ADRENO_IOCOHERENT |
				ADRENO_CONTENT_PROTECTION | ADRENO_L3_VOTE |
				ADRENO_IFPC | ADRENO_PREEMPTION | ADRENO_BCL |
				ADRENO_ACD | ADRENO_LPAC | ADRENO_DMS,
		.gpudev = &adreno_gen7_hwsched_gpudev.base,
		.perfcounters = &adreno_gen7_hwsched_perfcounters,
		.uche_gmem_alignment = SZ_16M,
		.gmem_size = 3 * SZ_1M,
		.bus_width = 32,
		.snapshot_size = SZ_4M,
	},
	.gmu_fw_version = GMU_VERSION(4, 1, 9),
	.sqefw_name = "a740v3_sqe.fw",
	.gmufw_name = "gmu_gen70200.bin",
	.zap_name = "a740v3_zap",
	.hwcg = gen7_6_0_hwcg_regs,
	.hwcg_count = ARRAY_SIZE(gen7_6_0_hwcg_regs),
	.gbif = gen7_0_0_gbif_regs,
	.gbif_count = ARRAY_SIZE(gen7_0_0_gbif_regs),
	.hang_detect_cycles = 0xcfffff,
	.protected_regs = gen7_0_0_protected_regs,
	.highest_bank_bit = 16,
	.gmu_hub_clk_freq = 200000000,
	.bcl_data = 1,
	.gen7_snapshot_block_list = &gen7_6_0_snapshot_block_list,
	.qos_value = gen7_6_0_gbif_client_qos_values,
	.ctxt_record_size = (4192 * SZ_1K),
};

static const struct adreno_gpu_core *adreno_gpulist[] = {
	&adreno_gpu_core_gen7_0_0.base,
	&adreno_gpu_core_gen7_0_1.base,
	&adreno_gpu_core_gen7_4_0.base,
	&adreno_gpu_core_gen7_3_0.base,
	&adreno_gpu_core_gen7_6_0.base,

};
